// Code generated by mockery v1.0.0. DO NOT EDIT.
package fbcontext

import mock "github.com/stretchr/testify/mock"

// MockFBContext is an autogenerated mock type for the FBContext type
type MockFBContext struct {
	mock.Mock
}

// AckMessage provides a mock function with given fields: msg
func (_m *MockFBContext) AckMessage(msg Message) error {
	ret := _m.Called(msg)

	var r0 error
	if rf, ok := ret.Get(0).(func(Message) error); ok {
		r0 = rf(msg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ConfigureLeader provides a mock function with given fields: leader
func (_m *MockFBContext) ConfigureLeader(leader func() bool) {
	_m.Called(leader)
}

// ConfigureMessaging provides a mock function with given fields: send, ack
func (_m *MockFBContext) ConfigureMessaging(send MessageFunc, ack MessageFunc) {
	_m.Called(send, ack)
}

// InstanceID provides a mock function with given fields:
func (_m *MockFBContext) InstanceID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// IsLeader provides a mock function with given fields:
func (_m *MockFBContext) IsLeader() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// SendMessage provides a mock function with given fields: msg
func (_m *MockFBContext) SendMessage(msg Message) error {
	ret := _m.Called(msg)

	var r0 error
	if rf, ok := ret.Get(0).(func(Message) error); ok {
		r0 = rf(msg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
